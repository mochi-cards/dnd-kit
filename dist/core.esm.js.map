{"version":3,"file":"core.esm.js","sources":["../src/components/Accessibility/defaults.ts","../src/store/actions.ts","../src/utilities/other/noop.ts","../src/store/constructors.ts","../src/store/context.ts","../src/store/reducer.ts","../src/hooks/monitor/useDndMonitor.ts","../src/components/Accessibility/Accessibility.tsx","../src/utilities/coordinates/constants.ts","../src/utilities/coordinates/distanceBetweenPoints.ts","../src/utilities/coordinates/getRelativeTransformOrigin.ts","../src/utilities/algorithms/closestCenter.ts","../src/utilities/rect/adjustScale.ts","../src/utilities/rect/getRectDelta.ts","../src/utilities/rect/rectAdjustment.ts","../src/utilities/scroll/isFixed.ts","../src/utilities/scroll/isScrollable.ts","../src/utilities/scroll/getScrollableAncestors.ts","../src/utilities/scroll/getScrollableElement.ts","../src/utilities/scroll/getScrollCoordinates.ts","../src/types/direction.ts","../src/utilities/scroll/getScrollPosition.ts","../src/utilities/scroll/documentScrollingElement.ts","../src/utilities/scroll/getScrollDirectionAndSpeed.ts","../src/utilities/scroll/getScrollElementRect.ts","../src/utilities/scroll/getScrollOffsets.ts","../src/utilities/rect/getRect.ts","../src/utilities/rect/isViewRect.ts","../src/utilities/algorithms/closestCorners.ts","../src/utilities/algorithms/rectIntersection.ts","../src/hooks/utilities/useAutoScroller.ts","../src/hooks/utilities/useCachedNode.ts","../src/hooks/utilities/useCombineActivators.ts","../src/hooks/utilities/useData.ts","../src/hooks/utilities/useDroppableMeasuring.ts","../src/hooks/utilities/useScrollOffsets.ts","../src/hooks/utilities/useScrollableAncestors.ts","../src/hooks/utilities/useSensorSetup.ts","../src/hooks/utilities/useSyntheticListeners.ts","../src/hooks/utilities/useRect.ts","../src/utilities/nodes/getMeasurableNode.ts","../src/hooks/utilities/useDragOverlayMeasuring.ts","../src/sensors/useSensor.ts","../src/sensors/useSensors.ts","../src/sensors/utilities/Listeners.ts","../src/sensors/utilities/getEventListenerTarget.ts","../src/sensors/utilities/hasExceededDistance.ts","../src/sensors/events.ts","../src/sensors/keyboard/types.ts","../src/sensors/keyboard/defaults.ts","../src/sensors/keyboard/KeyboardSensor.ts","../src/sensors/pointer/AbstractPointerSensor.ts","../src/sensors/pointer/PointerSensor.ts","../src/sensors/mouse/MouseSensor.ts","../src/sensors/touch/TouchSensor.ts","../src/modifiers/applyModifiers.ts","../src/components/DndContext/DndContext.tsx","../src/hooks/useDraggable.ts","../src/hooks/useDndContext.ts","../src/hooks/useDroppable.ts","../src/components/DragOverlay/hooks/useDropAnimation.ts","../src/components/DragOverlay/DragOverlay.tsx"],"sourcesContent":["import type {Announcements, ScreenReaderInstructions} from './types';\n\nexport const screenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart(id) {\n    return `Picked up draggable item ${id}.`;\n  },\n  onDragOver(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was moved over droppable area ${overId}.`;\n    }\n\n    return `Draggable item ${id} is no longer over a droppable area.`;\n  },\n  onDragEnd(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was dropped over droppable area ${overId}`;\n    }\n\n    return `Draggable item ${id} was dropped.`;\n  },\n  onDragCancel(id) {\n    return `Dragging was cancelled. Draggable item ${id} was dropped.`;\n  },\n};\n","import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  DragOver = 'dragOver',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n    };\n","export function noop(..._args: any) {}\n","import type {UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\ntype Identifier = UniqueIdentifier | null | undefined;\n\nexport class DroppableContainersMap extends Map<\n  UniqueIdentifier,\n  DroppableContainer\n> {\n  get(id: Identifier) {\n    return id != null ? super.get(id) ?? undefined : undefined;\n  }\n\n  toArray(): DroppableContainer[] {\n    return Array.from(this.values());\n  }\n\n  getEnabled(): DroppableContainer[] {\n    return this.toArray().filter(({disabled}) => !disabled);\n  }\n\n  getNodeFor(id: Identifier) {\n    return this.get(id)?.node.current ?? undefined;\n  }\n}\n","import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport {DroppableContainersMap} from './constructors';\nimport type {DndContextDescriptor} from './types';\n\nexport const Context = createContext<DndContextDescriptor>({\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  activeNodeClientRect: null,\n  activators: [],\n  ariaDescribedById: {\n    draggable: '',\n  },\n  containerNodeRect: null,\n  dispatch: noop,\n  draggableNodes: {},\n  droppableRects: new Map(),\n  droppableContainers: new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  recomputeLayouts: noop,\n  windowRect: null,\n  willRecomputeLayouts: false,\n});\n","import {Action, Actions} from './actions';\nimport {DroppableContainersMap} from './constructors';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      nodes: {},\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: new DroppableContainersMap(),\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n        },\n      };\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, element);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, key, disabled} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, {\n        ...element,\n        disabled,\n      });\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id, key} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.delete(id);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {createContext, useContext, useEffect, useRef} from 'react';\n\nimport {Action} from '../../store';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n} from '../../types';\n\nexport interface Arguments {\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface DndMonitorState {\n  type: Action | null;\n  event:\n    | null\n    | DragStartEvent\n    | DragMoveEvent\n    | DragOverEvent\n    | DragEndEvent\n    | DragCancelEvent;\n}\n\nexport const DndMonitorContext = createContext<DndMonitorState>({\n  type: null,\n  event: null,\n});\n\nexport function useDndMonitor({\n  onDragStart,\n  onDragMove,\n  onDragOver,\n  onDragEnd,\n  onDragCancel,\n}: Arguments) {\n  const monitorState = useContext(DndMonitorContext);\n  const previousMonitorState = useRef(monitorState);\n\n  useEffect(() => {\n    if (monitorState !== previousMonitorState.current) {\n      const {type, event} = monitorState;\n\n      switch (type) {\n        case Action.DragStart:\n          onDragStart?.(event as DragStartEvent);\n          break;\n        case Action.DragMove:\n          onDragMove?.(event as DragMoveEvent);\n          break;\n        case Action.DragOver:\n          onDragOver?.(event as DragOverEvent);\n          break;\n        case Action.DragCancel:\n          onDragCancel?.(event as DragCancelEvent);\n          break;\n        case Action.DragEnd:\n          onDragEnd?.(event as DragEndEvent);\n          break;\n      }\n\n      previousMonitorState.current = monitorState;\n    }\n  }, [\n    monitorState,\n    onDragStart,\n    onDragMove,\n    onDragOver,\n    onDragEnd,\n    onDragCancel,\n  ]);\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport type {Announcements, ScreenReaderInstructions} from './types';\nimport type {UniqueIdentifier} from '../../types';\nimport {defaultAnnouncements} from './defaults';\nimport {DndMonitorArguments, useDndMonitor} from '../../hooks/monitor';\n\ninterface Props {\n  announcements?: Announcements;\n  screenReaderInstructions: ScreenReaderInstructions;\n  hiddenTextDescribedById: UniqueIdentifier;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  hiddenTextDescribedById,\n  screenReaderInstructions,\n}: Props) {\n  const {announce, announcement} = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useDndMonitor(\n    useMemo<DndMonitorArguments>(\n      () => ({\n        onDragStart({active}) {\n          announce(announcements.onDragStart(active.id));\n        },\n        onDragMove({active, over}) {\n          if (announcements.onDragMove) {\n            announce(announcements.onDragMove(active.id, over?.id));\n          }\n        },\n        onDragOver({active, over}) {\n          announce(announcements.onDragOver(active.id, over?.id));\n        },\n        onDragEnd({active, over}) {\n          announce(announcements.onDragEnd(active.id, over?.id));\n        },\n        onDragCancel({active}) {\n          announce(announcements.onDragCancel(active.id));\n        },\n      }),\n      [announce, announcements]\n    )\n  );\n\n  return mounted\n    ? createPortal(\n        <>\n          <HiddenText\n            id={hiddenTextDescribedById}\n            value={screenReaderInstructions.draggable}\n          />\n          <LiveRegion id={liveRegionId} announcement={announcement} />\n        </>,\n        document.body\n      )\n    : null;\n}\n","import type {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n","import type {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n","import {getEventCoordinates, isKeyboardEvent} from '@dnd-kit/utilities';\n\nexport function getRelativeTransformOrigin(\n  event: MouseEvent | TouchEvent | KeyboardEvent,\n  rect: ClientRect\n) {\n  if (isKeyboardEvent(event)) {\n    return '0 0';\n  }\n\n  const eventCoordinates = getEventCoordinates(event);\n  const transformOrigin = {\n    x: ((eventCoordinates.x - rect.left) / rect.width) * 100,\n    y: ((eventCoordinates.y - rect.top) / rect.height) * 100,\n  };\n\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n","import {distanceBetween} from '../coordinates';\nimport type {Coordinates, LayoutRect, UniqueIdentifier} from '../../types';\n\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: LayoutRect,\n  left = rect.offsetLeft,\n  top = rect.offsetTop\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangle from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = ({\n  collisionRect,\n  droppableContainers,\n}) => {\n  const centerRect = centerOfRectangle(\n    collisionRect,\n    collisionRect.left,\n    collisionRect.top\n  );\n  let minDistanceToCenter = Infinity;\n  let minDroppableContainer: UniqueIdentifier | null = null;\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n\n      if (distBetween < minDistanceToCenter) {\n        minDistanceToCenter = distBetween;\n        minDroppableContainer = droppableContainer.id;\n      }\n    }\n  }\n\n  return minDroppableContainer;\n};\n","import type {Transform} from '@dnd-kit/utilities';\nimport type {LayoutRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: LayoutRect | null,\n  rect2: LayoutRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n","import type {Coordinates, ViewRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ViewRect | null,\n  rect2: ViewRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n","import type {Coordinates, ViewRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustViewRect(\n    viewRect: ViewRect,\n    ...adjustments: Coordinates[]\n  ): ViewRect {\n    return adjustments.reduce<ViewRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n        offsetLeft: acc.offsetLeft + modifier * adjustment.x,\n        offsetTop: acc.offsetTop + modifier * adjustment.y,\n      }),\n      {...viewRect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n","export function isFixed(\n  node: HTMLElement,\n  computedStyle: CSSStyleDeclaration = window.getComputedStyle(node)\n): boolean {\n  return computedStyle.position === 'fixed';\n}\n","export function isScrollable(\n  node: HTMLElement,\n  computedStyle: CSSStyleDeclaration = window.getComputedStyle(node)\n): boolean {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return (\n    properties.find((property) => {\n      const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n      return typeof value === 'string' ? overflowRegex.test(value) : false;\n    }) != null\n  );\n}\n","import {isDocument, isHTMLElement, isSVGElement} from '@dnd-kit/utilities';\n\nimport {isFixed} from './isFixed';\nimport {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(element: Node | null): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (\n      isDocument(node) &&\n      node.scrollingElement != null &&\n      !scrollParents.includes(node.scrollingElement)\n    ) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const computedStyle = window.getComputedStyle(node);\n\n    if (isScrollable(node, computedStyle)) {\n      scrollParents.push(node);\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  return element ? findScrollableAncestors(element.parentNode) : scrollParents;\n}\n","import {\n  canUseDOM,\n  isHTMLElement,\n  isDocument,\n  getOwnerDocument,\n  isNode,\n  isWindow,\n} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (\n    isDocument(element) ||\n    element === getOwnerDocument(element).scrollingElement\n  ) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n","import {isWindow} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  if (isWindow(element)) {\n    return {\n      x: element.scrollX,\n      y: element.scrollY,\n    };\n  }\n\n  return {\n    x: element.scrollLeft,\n    y: element.scrollTop,\n  };\n}\n","export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n","export function getScrollPosition(scrollingContainer: Element) {\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - scrollingContainer.clientWidth,\n    y: scrollingContainer.scrollHeight - scrollingContainer.clientHeight,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll,\n  };\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n","import {Direction, ViewRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\nimport {isDocumentScrollingElement} from './documentScrollingElement';\n\ninterface Rect extends Pick<ViewRect, 'top' | 'left' | 'right' | 'bottom'> {}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2,\n};\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ViewRect,\n  {top, left, right, bottom}: Rect,\n  acceleration = 10,\n  thresholdPercentage = defaultThreshold\n) {\n  const {clientHeight, clientWidth} = scrollContainer;\n  const finalScrollContainerRect = isDocumentScrollingElement(scrollContainer)\n    ? {\n        top: 0,\n        left: 0,\n        right: clientWidth,\n        bottom: clientHeight,\n        width: clientWidth,\n        height: clientHeight,\n      }\n    : scrollContainerRect;\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: finalScrollContainerRect.height * thresholdPercentage.y,\n    width: finalScrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (!isTop && top <= finalScrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.top + threshold.height - top) /\n          threshold.height\n      );\n  } else if (\n    !isBottom &&\n    bottom >= finalScrollContainerRect.bottom - threshold.height\n  ) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.bottom - threshold.height - bottom) /\n          threshold.height\n      );\n  }\n\n  if (!isRight && right >= finalScrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.right - threshold.width - right) /\n          threshold.width\n      );\n  } else if (\n    !isLeft &&\n    left <= finalScrollContainerRect.left + threshold.width\n  ) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.left + threshold.width - left) /\n          threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","export function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  const {top, left, right, bottom} = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight,\n  };\n}\n","import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {getScrollCoordinates} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n","import {isHTMLElement, isWindow} from '@dnd-kit/utilities';\n\nimport type {Coordinates, ClientRect, LayoutRect, ViewRect} from '../../types';\nimport {getScrollableAncestors, getScrollOffsets} from '../scroll';\nimport {defaultCoordinates} from '../coordinates';\n\nfunction getEdgeOffset(\n  node: HTMLElement | null,\n  parent: (Node & ParentNode) | null,\n  offset = defaultCoordinates\n): Coordinates {\n  if (!node || !isHTMLElement(node)) {\n    return offset;\n  }\n\n  const nodeOffset = {\n    x: offset.x + node.offsetLeft,\n    y: offset.y + node.offsetTop,\n  };\n\n  if (node.offsetParent === parent) {\n    return nodeOffset;\n  }\n\n  return getEdgeOffset(node.offsetParent as HTMLElement, parent, nodeOffset);\n}\n\nexport function getLayoutRect(element: HTMLElement): LayoutRect {\n  const {offsetWidth: width, offsetHeight: height} = element;\n  const {x: offsetLeft, y: offsetTop} = getEdgeOffset(element, null);\n\n  return {\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n  };\n}\n\nexport function getViewportLayoutRect(element: HTMLElement): LayoutRect {\n  const {width, height, top, left} = element.getBoundingClientRect();\n  const scrollableAncestors = getScrollableAncestors(element);\n  const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n  return {\n    width,\n    height,\n    offsetTop: top + scrollOffsets.y,\n    offsetLeft: left + scrollOffsets.x,\n  };\n}\n\nexport function getBoundingClientRect(\n  element: HTMLElement | typeof window\n): ClientRect {\n  if (isWindow(element)) {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return {\n      top: 0,\n      left: 0,\n      right: width,\n      bottom: height,\n      width,\n      height,\n      offsetTop: 0,\n      offsetLeft: 0,\n    };\n  }\n\n  const {offsetTop, offsetLeft} = getLayoutRect(element);\n  const {\n    width,\n    height,\n    top,\n    bottom,\n    left,\n    right,\n  } = element.getBoundingClientRect();\n\n  return {\n    width,\n    height,\n    top,\n    bottom,\n    right,\n    left,\n    offsetTop,\n    offsetLeft,\n  };\n}\n\nexport function getViewRect(element: HTMLElement): ViewRect {\n  const {width, height, offsetTop, offsetLeft} = getLayoutRect(element);\n  const scrollableAncestors = getScrollableAncestors(element);\n  const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n  const top = offsetTop - scrollOffsets.y;\n  const left = offsetLeft - scrollOffsets.x;\n\n  return {\n    width,\n    height,\n    top,\n    bottom: top + height,\n    right: left + width,\n    left,\n    offsetTop,\n    offsetLeft,\n  };\n}\n","import type {LayoutRect, ViewRect} from '../../types';\n\nexport function isViewRect(entry: LayoutRect | ViewRect): entry is ViewRect {\n  return 'top' in entry;\n}\n","import type {LayoutRect, UniqueIdentifier} from '../../types';\nimport {distanceBetween} from '../coordinates';\nimport {isViewRect} from '../rect';\n\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\n\nfunction cornersOfRectangle(\n  rect: LayoutRect,\n  left = rect.offsetLeft,\n  top = rect.offsetTop\n) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + rect.width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + rect.height,\n    },\n    {\n      x: left + rect.width,\n      y: top + rect.height,\n    },\n  ];\n}\n\n/**\n * Returns the closest rectangle from an array of rectangles to the corners of\n * another rectangle.\n */\nexport const closestCorners: CollisionDetection = ({\n  collisionRect,\n  droppableContainers,\n}) => {\n  let minDistanceToCorners = Infinity;\n  let minDistanceContainer: UniqueIdentifier | null = null;\n  const corners = cornersOfRectangle(\n    collisionRect,\n    collisionRect.left,\n    collisionRect.top\n  );\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect) {\n      const rectCorners = cornersOfRectangle(\n        rect,\n        isViewRect(rect) ? rect.left : undefined,\n        isViewRect(rect) ? rect.top : undefined\n      );\n      const distances = corners.reduce((accumulator, corner, index) => {\n        return accumulator + distanceBetween(rectCorners[index], corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      if (effectiveDistance < minDistanceToCorners) {\n        minDistanceToCorners = effectiveDistance;\n        minDistanceContainer = droppableContainer.id;\n      }\n    }\n  }\n\n  return minDistanceContainer;\n};\n","import type {LayoutRect, UniqueIdentifier, ViewRect} from '../../types';\n\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nfunction getIntersectionRatio(entry: LayoutRect, target: ViewRect): number {\n  const top = Math.max(target.top, entry.offsetTop);\n  const left = Math.max(target.left, entry.offsetLeft);\n  const right = Math.min(\n    target.left + target.width,\n    entry.offsetLeft + entry.width\n  );\n  const bottom = Math.min(\n    target.top + target.height,\n    entry.offsetTop + entry.height\n  );\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangle that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = ({\n  collisionRect,\n  droppableContainers,\n}) => {\n  let maxIntersectionRatio = 0;\n  let maxIntersectingDroppableContainer: UniqueIdentifier | null = null;\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > maxIntersectionRatio) {\n        maxIntersectionRatio = intersectionRatio;\n        maxIntersectingDroppableContainer = droppableContainer.id;\n      }\n    }\n  }\n\n  return maxIntersectingDroppableContainer;\n};\n","import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useInterval} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed, defaultCoordinates} from '../../utilities';\nimport type {Coordinates, Direction, ViewRect} from '../../types';\n\nexport type ScrollAncestorSortingFn = (ancestors: Element[]) => Element[];\n\nexport enum AutoScrollActivator {\n  Pointer,\n  DraggableRect,\n}\n\nexport interface Options {\n  acceleration?: number;\n  activator?: AutoScrollActivator;\n  canScroll?: CanScroll;\n  enabled?: boolean;\n  interval?: number;\n  order?: TraversalOrder;\n  threshold?: {\n    x: number;\n    y: number;\n  };\n}\n\ninterface Arguments extends Options {\n  draggingRect: ViewRect | null;\n  enabled: boolean;\n  pointerCoordinates: Coordinates | null;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ViewRect[];\n}\n\nexport type CanScroll = (element: Element) => boolean;\n\nexport enum TraversalOrder {\n  TreeOrder,\n  ReversedTreeOrder,\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  threshold,\n}: Arguments) {\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({\n    x: 1,\n    y: 1,\n  });\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates\n          ? {\n              top: pointerCoordinates.y,\n              bottom: pointerCoordinates.y,\n              left: pointerCoordinates.x,\n              right: pointerCoordinates.x,\n            }\n          : null;\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n\n    return null;\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollDirection = useRef<ScrollDirection>(defaultCoordinates);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(\n    () =>\n      order === TraversalOrder.TreeOrder\n        ? [...scrollableAncestors].reverse()\n        : scrollableAncestors,\n    [order, scrollableAncestors]\n  );\n\n  useEffect(\n    () => {\n      if (!enabled || !scrollableAncestors.length || !rect) {\n        clearAutoScrollInterval();\n        return;\n      }\n\n      for (const scrollContainer of sortedScrollableAncestors) {\n        if (canScroll?.(scrollContainer) === false) {\n          continue;\n        }\n\n        const index = scrollableAncestors.indexOf(scrollContainer);\n        const scrolllContainerRect = scrollableAncestorRects[index];\n\n        if (!scrolllContainerRect) {\n          continue;\n        }\n\n        const {direction, speed} = getScrollDirectionAndSpeed(\n          scrollContainer,\n          scrolllContainerRect,\n          rect,\n          acceleration,\n          threshold\n        );\n\n        if (speed.x > 0 || speed.y > 0) {\n          clearAutoScrollInterval();\n\n          scrollContainerRef.current = scrollContainer;\n          setAutoScrollInterval(autoScroll, interval);\n\n          scrollSpeed.current = speed;\n          scrollDirection.current = direction;\n\n          return;\n        }\n      }\n\n      scrollSpeed.current = {x: 0, y: 0};\n      scrollDirection.current = {x: 0, y: 0};\n      clearAutoScrollInterval();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      acceleration,\n      autoScroll,\n      canScroll,\n      clearAutoScrollInterval,\n      enabled,\n      interval,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(rect),\n      setAutoScrollInterval,\n      scrollableAncestors,\n      sortedScrollableAncestors,\n      scrollableAncestorRects,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(threshold),\n    ]\n  );\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {DraggableNode, DraggableNodes} from '../../store';\nimport type {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNodes: DraggableNodes,\n  id: UniqueIdentifier | null\n): DraggableNode['node']['current'] {\n  const draggableNode = id !== null ? draggableNodes[id] : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n\n  return useLazyMemo(\n    (cachedNode) => {\n      if (id === null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return node ?? cachedNode ?? null;\n    },\n    [node, id]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorHandler} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorHandler,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n","import {useRef} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {Data} from '../../store';\n\nexport function useData(data: Data | undefined) {\n  const dataRef = useRef(data);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dataRef.current !== data) {\n      dataRef.current = data;\n    }\n  }, [data]);\n\n  return dataRef;\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getLayoutRect} from '../../utilities';\nimport type {DroppableContainer, LayoutRectMap} from '../../store/types';\nimport type {LayoutRect} from '../../types';\n\ninterface Arguments {\n  dragging: boolean;\n  dependencies: any[];\n  config: Partial<DroppableMeasuring> | undefined;\n}\n\nexport enum MeasuringStrategy {\n  Always,\n  BeforeDragging,\n  WhileDragging,\n}\n\nexport enum MeasuringFrequency {\n  Optimized = 'optimized',\n}\n\ntype MeasuringFunction = (element: HTMLElement) => LayoutRect;\n\nexport interface DroppableMeasuring {\n  measure: MeasuringFunction;\n  strategy: MeasuringStrategy;\n  frequency: MeasuringFrequency | number;\n}\n\nconst defaultValue: LayoutRectMap = new Map();\n\nconst defaultConfig: DroppableMeasuring = {\n  measure: getLayoutRect,\n  strategy: MeasuringStrategy.WhileDragging,\n  frequency: MeasuringFrequency.Optimized,\n};\n\nexport function useDroppableMeasuring(\n  containers: DroppableContainer[],\n  {dragging, dependencies, config}: Arguments\n) {\n  const [willRecomputeLayouts, setWillRecomputeLayouts] = useState(false);\n  const {frequency, measure, strategy} = {\n    ...defaultConfig,\n    ...config,\n  };\n  const containersRef = useRef(containers);\n  const recomputeLayouts = useCallback(() => setWillRecomputeLayouts(true), []);\n  const recomputeLayoutsTimeoutId = useRef<NodeJS.Timeout | null>(null);\n  const disabled = isDisabled();\n  const layoutRectMap = useLazyMemo<LayoutRectMap>(\n    (previousValue) => {\n      if (disabled && !dragging) {\n        return defaultValue;\n      }\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        willRecomputeLayouts\n      ) {\n        for (let container of containers) {\n          if (!container) {\n            continue;\n          }\n\n          container.rect.current = container.node.current\n            ? measure(container.node.current)\n            : null;\n        }\n\n        return createLayoutRectMap(containers);\n      }\n\n      return previousValue;\n    },\n    [containers, dragging, disabled, measure, willRecomputeLayouts]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(() => {\n    if (willRecomputeLayouts) {\n      setWillRecomputeLayouts(false);\n    }\n  }, [willRecomputeLayouts]);\n\n  useEffect(\n    function recompute() {\n      if (disabled) {\n        return;\n      }\n\n      requestAnimationFrame(recomputeLayouts);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dragging, disabled]\n  );\n\n  useEffect(\n    function forceRecomputeLayouts() {\n      if (\n        disabled ||\n        typeof frequency !== 'number' ||\n        recomputeLayoutsTimeoutId.current !== null\n      ) {\n        return;\n      }\n\n      recomputeLayoutsTimeoutId.current = setTimeout(() => {\n        recomputeLayouts();\n        recomputeLayoutsTimeoutId.current = null;\n      }, frequency);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [frequency, disabled, recomputeLayouts, ...dependencies]\n  );\n\n  return {\n    layoutRectMap,\n    recomputeLayouts,\n    willRecomputeLayouts,\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n      default:\n        return !dragging;\n    }\n  }\n}\n\nfunction createLayoutRectMap(\n  containers: DroppableContainer[] | null\n): LayoutRectMap {\n  const layoutRectMap: LayoutRectMap = new Map();\n\n  if (containers) {\n    for (const container of containers) {\n      if (!container) {\n        continue;\n      }\n\n      const {id, rect} = container;\n\n      if (rect.current == null) {\n        continue;\n      }\n\n      layoutRectMap.set(id, rect.current);\n    }\n  }\n\n  return layoutRectMap;\n}\n","import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n","import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n","import {useEffect} from 'react';\nimport {canUseDOM} from '@dnd-kit/utilities';\n\nimport type {SensorDescriptor} from '../../sensors';\n\nexport function useSensorSetup(sensors: SensorDescriptor<any>[]) {\n  useEffect(\n    () => {\n      if (!canUseDOM) {\n        return;\n      }\n\n      const teardownFns = sensors.map(({sensor}) => sensor.setup?.());\n\n      return () => {\n        for (const teardown of teardownFns) {\n          teardown?.();\n        }\n      };\n    },\n    // TO-DO: Sensors lenght could theoretically change which would not be a valid dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    sensors.map(({sensor}) => sensor)\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: string\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n","import {useRef} from 'react';\nimport {isHTMLElement, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getBoundingClientRect, getViewRect} from '../../utilities';\nimport type {LayoutRect} from '../../types';\n\ntype RectFn<T, U> = (element: U) => T;\n\nexport const useViewRect = createUseRectFn(getViewRect);\nexport const useClientRect = createUseRectFn(getBoundingClientRect);\nexport const useClientRects = createUseRectsFn(getBoundingClientRect);\n\nexport function useRect<\n  T = LayoutRect,\n  U extends Element | Window = HTMLElement\n>(\n  element: U | null,\n  getRect: (element: U) => T,\n  forceRecompute?: boolean\n): T | null {\n  const previousElement = useRef(element);\n\n  return useLazyMemo<T | null>(\n    (previousValue) => {\n      if (!element) {\n        return null;\n      }\n\n      if (\n        forceRecompute ||\n        (!previousValue && element) ||\n        element !== previousElement.current\n      ) {\n        if (isHTMLElement(element) && element.parentNode == null) {\n          return null;\n        }\n\n        return getRect(element as U);\n      }\n\n      return previousValue ?? null;\n    },\n    [element, forceRecompute, getRect]\n  );\n}\n\nexport function createUseRectFn<\n  T = LayoutRect,\n  U extends Element | Window = HTMLElement\n>(getRect: RectFn<T, U>) {\n  return (element: U | null, forceRecompute?: boolean) =>\n    useRect(element, getRect, forceRecompute);\n}\n\nfunction createUseRectsFn<T = LayoutRect>(getRect: RectFn<T, HTMLElement>) {\n  const defaultValue: T[] = [];\n\n  return function useRects(elements: Element[], forceRecompute?: boolean): T[] {\n    const previousElements = useRef(elements);\n\n    return useLazyMemo<T[]>(\n      (previousValue) => {\n        if (!elements.length) {\n          return defaultValue;\n        }\n\n        if (\n          forceRecompute ||\n          (!previousValue && elements.length) ||\n          elements !== previousElements.current\n        ) {\n          return elements.map((element) => getRect(element as HTMLElement));\n        }\n\n        return previousValue ?? defaultValue;\n      },\n      [elements, forceRecompute]\n    );\n  };\n}\n","import {isHTMLElement} from '@dnd-kit/utilities';\n\nexport function getMeasurableNode(\n  node: HTMLElement | undefined | null\n): HTMLElement | null {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n  const firstChild = node.children[0];\n\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n","import {useMemo} from 'react';\nimport {useNodeRef} from '@dnd-kit/utilities';\n\nimport {getMeasurableNode} from '../../utilities/nodes';\nimport {getLayoutRect} from '../../utilities/rect';\nimport type {DndContextDescriptor} from '../../store';\nimport type {ViewRect} from '../../types';\n\nimport {createUseRectFn} from './useRect';\n\ninterface Arguments {\n  disabled: boolean;\n  forceRecompute: boolean;\n}\n\n// To-do: Delete and replace with `getViewRect` when https://github.com/clauderic/dnd-kit/pull/415 is merged\nfunction getDragOverlayRect(element: HTMLElement): ViewRect {\n  const {width, height, offsetLeft, offsetTop} = getLayoutRect(element);\n\n  return {\n    top: offsetTop,\n    bottom: offsetTop + height,\n    left: offsetLeft,\n    right: offsetLeft + width,\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n  };\n}\nconst useDragOverlayRect = createUseRectFn(getDragOverlayRect);\n\nexport function useDragOverlayMeasuring({\n  disabled,\n  forceRecompute,\n}: Arguments): DndContextDescriptor['dragOverlay'] {\n  const [nodeRef, setRef] = useNodeRef();\n  const rect = useDragOverlayRect(\n    disabled ? null : getMeasurableNode(nodeRef.current),\n    forceRecompute\n  );\n\n  return useMemo(\n    () => ({\n      nodeRef,\n      rect,\n      setRef,\n    }),\n    [rect, nodeRef, setRef]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n","export class Listeners {\n  private listeners: [\n    string,\n    EventListenerOrEventListenerObject,\n    AddEventListenerOptions | boolean | undefined\n  ][] = [];\n\n  constructor(private target: EventTarget | null) {}\n\n  public add<T extends Event>(\n    eventName: string,\n    handler: (event: T) => void,\n    options?: AddEventListenerOptions | boolean\n  ) {\n    this.target?.addEventListener(eventName, handler as EventListener, options);\n    this.listeners.push([eventName, handler as EventListener, options]);\n  }\n\n  public removeAll = () => {\n    this.listeners.forEach((listener) =>\n      this.target?.removeEventListener(...listener)\n    );\n  };\n}\n","import {getOwnerDocument, getWindow} from '@dnd-kit/utilities';\n\nexport function getEventListenerTarget(\n  target: EventTarget | null\n): EventTarget | Document {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n\n  const {EventTarget} = getWindow(target);\n\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n","import type {Coordinates, DistanceMeasurement} from '../../types';\n\nexport function hasExceededDistance(\n  delta: Coordinates,\n  measurement: DistanceMeasurement\n): boolean {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n","export enum EventName {\n  Click = 'click',\n  DragStart = 'dragstart',\n  Keydown = 'keydown',\n  ContextMenu = 'contextmenu',\n  Resize = 'resize',\n  SelectionChange = 'selectionchange',\n  VisibilityChange = 'visibilitychange',\n}\n\nexport function preventDefault(event: Event) {\n  event.preventDefault();\n}\n\nexport function stopPropagation(event: Event) {\n  event.stopPropagation();\n}\n","import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n","import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n","import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n  getOwnerDocument,\n  getWindow,\n  isKeyboardEvent,\n} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  defaultCoordinates,\n  getBoundingClientRect,\n  getScrollPosition,\n  getScrollElementRect,\n} from '../../utilities';\nimport {Listeners} from '../utilities';\nimport {EventName} from '../events';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n  onActivation?({event}: {event: KeyboardEvent}): void;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private coordinates: Coordinates = defaultCoordinates;\n  private listeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n\n    if (!activeNode.node.current) {\n      throw new Error('Active draggable node is undefined');\n    }\n\n    const activeNodeRect = getBoundingClientRect(activeNode.node.current);\n    const coordinates = {\n      x: activeNodeRect.left,\n      y: activeNodeRect.top,\n    };\n\n    this.coordinates = coordinates;\n\n    onStart(coordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (isKeyboardEvent(event)) {\n      const {coordinates} = this;\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates: coordinates,\n      });\n\n      if (newCoordinates) {\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const coordinatesDelta = getCoordinatesDelta(\n            newCoordinates,\n            coordinates\n          );\n          const {\n            isTop,\n            isRight,\n            isLeft,\n            isBottom,\n            maxScroll,\n            minScroll,\n          } = getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                scrollContainer.scrollLeft + coordinatesDelta.x <=\n                  maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                scrollContainer.scrollLeft + coordinatesDelta.x >= minScroll.x);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                left: coordinatesDelta.x,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.x =\n              direction === KeyboardCode.Right\n                ? scrollContainer.scrollLeft - maxScroll.x\n                : scrollContainer.scrollLeft - minScroll.x;\n\n            scrollContainer.scrollBy({\n              left: -scrollDelta.x,\n              behavior: scrollBehavior,\n            });\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                scrollContainer.scrollTop + coordinatesDelta.y <=\n                  maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                scrollContainer.scrollTop + coordinatesDelta.y >= minScroll.y);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                top: coordinatesDelta.y,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.y =\n              direction === KeyboardCode.Down\n                ? scrollContainer.scrollTop - maxScroll.y\n                : scrollContainer.scrollTop - minScroll.y;\n\n            scrollContainer.scrollBy({\n              top: -scrollDelta.y,\n              behavior: scrollBehavior,\n            });\n\n            break;\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(newCoordinates, scrollDelta)\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n    this.coordinates = coordinates;\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n  static activators = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {\n          keyboardCodes = defaultKeyboardCodes,\n          onActivation,\n        }: KeyboardSensorOptions\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          event.preventDefault();\n\n          onActivation?.({event: event.nativeEvent});\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n","import {\n  subtract as getCoordinatesDelta,\n  getEventCoordinates,\n  getOwnerDocument,\n  getWindow,\n} from '@dnd-kit/utilities';\n\nimport {\n  getEventListenerTarget,\n  hasExceededDistance,\n  Listeners,\n} from '../utilities';\nimport {EventName, preventDefault, stopPropagation} from '../events';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates, DistanceMeasurement} from '../../types';\n\ninterface DistanceConstraint {\n  distance: DistanceMeasurement;\n  tolerance?: DistanceMeasurement;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: DistanceMeasurement;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint = DistanceConstraint | DelayConstraint;\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface AbstractPointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n  onActivation?({event}: {event: Event}): void;\n}\n\nexport type AbstractPointerSensorProps = SensorProps<AbstractPointerSensorOptions>;\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private document: Document;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private documentListeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(\n    private props: AbstractPointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n    const {target} = event;\n\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = getEventCoordinates(event);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, {passive: false});\n    this.listeners.add(events.end.name, this.handleEnd);\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n\n    // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      // Stop propagation of click events once activation constraints are met\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true,\n      });\n\n      // Remove any text selection from the document\n      this.removeTextSelection();\n\n      // Prevent further text selection while dragging\n      this.documentListeners.add(\n        EventName.SelectionChange,\n        this.removeTextSelection\n      );\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event);\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (\n          activationConstraint.tolerance != null &&\n          hasExceededDistance(delta, activationConstraint.tolerance)\n        ) {\n          return this.handleCancel();\n        }\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onEnd} = this.props;\n\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onCancel} = this.props;\n\n    this.detach();\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  private removeTextSelection() {\n    this.document.getSelection()?.removeAllRanges();\n  }\n}\n","import type {PointerEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  AbstractPointerSensorOptions,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport interface PointerSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: (\n        {nativeEvent: event}: PointerEvent,\n        {onActivation}: PointerSensorOptions\n      ) => {\n        if (!event.isPrimary || event.button !== 0) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {MouseEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  AbstractPointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type MouseSensorProps = SensorProps<MouseSensorOptions>;\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: MouseSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: (\n        {nativeEvent: event}: MouseEvent,\n        {onActivation}: MouseSensorOptions\n      ) => {\n        if (event.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {TouchEvent} from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\nimport type {SensorProps} from '../types';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport type TouchSensorProps = SensorProps<TouchSensorOptions>;\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: (\n        {nativeEvent: event}: TouchEvent,\n        {onActivation}: TouchSensorOptions\n      ) => {\n        const {touches} = event;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events.move.name, noop, {\n      capture: false,\n      passive: false,\n    });\n\n    return function teardown() {\n      window.removeEventListener(events.move.name, noop);\n    };\n\n    // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n    function noop() {}\n  }\n}\n","import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n","import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {unstable_batchedUpdates} from 'react-dom';\nimport {\n  add,\n  getEventCoordinates,\n  Transform,\n  useIsomorphicLayoutEffect,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  Context,\n  DndContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport type {ViewRect} from '../../types';\nimport {DndMonitorContext, DndMonitorState} from '../../hooks/monitor';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useDragOverlayMeasuring,\n  useDroppableMeasuring,\n  useScrollableAncestors,\n  useSensorSetup,\n  useClientRect,\n  useClientRects,\n  useRect,\n  useScrollOffsets,\n} from '../../hooks/utilities';\nimport type {\n  AutoScrollOptions,\n  DroppableMeasuring,\n  SyntheticListener,\n} from '../../hooks/utilities';\nimport {\n  KeyboardSensor,\n  PointerSensor,\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorHandler,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getRectDelta,\n  getViewRect,\n  rectIntersection,\n} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {Active, DataRef, Over} from '../../store/types';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  UniqueIdentifier,\n} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  screenReaderInstructions as defaultScreenReaderInstructions,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\nexport interface Props {\n  id?: string;\n  autoScroll?: boolean | AutoScrollOptions;\n  announcements?: Announcements;\n  cancelDrop?: CancelDrop;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  measuring?: MeasuringConfiguration;\n  modifiers?: Modifiers;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  sensors?: SensorDescriptor<any>[];\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface DraggableMeasuring {\n  measure(node: HTMLElement): ViewRect;\n}\n\nexport interface MeasuringConfiguration {\n  draggable?: Partial<DraggableMeasuring>;\n  droppable?: Partial<DroppableMeasuring>;\n}\n\nexport interface CancelDropArguments extends DragEndEvent {}\n\nexport type CancelDrop = (\n  args: CancelDropArguments\n) => boolean | Promise<boolean>;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\nconst defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nconst defaultData: DataRef = {current: {}};\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nexport const DndContext = memo(function DndContext({\n  id,\n  autoScroll = true,\n  announcements,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  measuring,\n  modifiers,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [monitorState, setMonitorState] = useState<DndMonitorState>(() => ({\n    type: null,\n    event: null,\n  }));\n  const [isDragging, setIsDragging] = useState(false);\n  const {\n    draggable: {active: activeId, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const node = activeId ? draggableNodes[activeId] : null;\n  const activeRects = useRef<Active['rect']['current']>({\n    initial: null,\n    translated: null,\n  });\n  const active = useMemo<Active | null>(\n    () =>\n      activeId != null\n        ? {\n            id: activeId,\n            // It's possible for the active node to unmount while dragging\n            data: node?.data ?? defaultData,\n            rect: activeRects,\n          }\n        : null,\n    [activeId, node]\n  );\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useRef(props);\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const enabledDroppableContainers = useMemo(() => {\n    return droppableContainers.getEnabled();\n  }, [droppableContainers]);\n  const {\n    layoutRectMap: droppableRects,\n    recomputeLayouts,\n    willRecomputeLayouts,\n  } = useDroppableMeasuring(enabledDroppableContainers, {\n    dragging: isDragging,\n    dependencies: [translate.x, translate.y],\n    config: measuring?.droppable,\n  });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = activatorEvent\n    ? getEventCoordinates(activatorEvent)\n    : null;\n  const activeNodeRect = useRect(\n    activeNode,\n    measuring?.draggable?.measure ?? getViewRect\n  );\n  const activeNodeClientRect = useClientRect(activeNode);\n  const initialActiveNodeRectRef = useRef<ViewRect | null>(null);\n  const initialActiveNodeRect = initialActiveNodeRectRef.current;\n  const sensorContext = useRef<SensorContext>({\n    active: null,\n    activeNode,\n    collisionRect: null,\n    droppableRects,\n    draggableNodes,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null,\n    translatedRect: null,\n  });\n  const overNode = droppableContainers.getNodeFor(\n    sensorContext.current.over?.id\n  );\n  const windowRect = useClientRect(\n    activeNode ? activeNode.ownerDocument.defaultView : null\n  );\n  const containerNodeRect = useClientRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const scrollableAncestors = useScrollableAncestors(\n    activeId ? overNode ?? activeNode : null\n  );\n  const scrollableAncestorRects = useClientRects(scrollableAncestors);\n\n  const dragOverlay = useDragOverlayMeasuring({\n    disabled: activeId == null,\n    forceRecompute: willRecomputeLayouts,\n  });\n\n  // Use the rect of the drag overlay if it is mounted\n  const draggingNodeRect = dragOverlay.rect ?? activeNodeRect;\n\n  // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n  const nodeRectDelta =\n    draggingNodeRect === activeNodeRect\n      ? getRectDelta(activeNodeRect, initialActiveNodeRect)\n      : defaultCoordinates;\n\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    activatorEvent,\n    active,\n    activeNodeRect: activeNodeClientRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const pointerCoordinates = activationCoordinates\n    ? add(activationCoordinates, translate)\n    : null;\n\n  const scrollAdjustment = useScrollOffsets(scrollableAncestors);\n\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n\n  const translatedRect = draggingNodeRect\n    ? getAdjustedRect(draggingNodeRect, modifiedTranslate)\n    : null;\n\n  const collisionRect = translatedRect\n    ? getAdjustedRect(translatedRect, scrollAdjustment)\n    : null;\n  const overId =\n    active && collisionRect\n      ? collisionDetection({\n          active,\n          collisionRect,\n          droppableContainers: enabledDroppableContainers,\n        })\n      : null;\n  const [over, setOver] = useState<Over | null>(null);\n\n  const transform = adjustScale(\n    modifiedTranslate,\n    over?.rect ?? null,\n    activeNodeRect\n  );\n\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (!activeRef.current) {\n        return;\n      }\n\n      const activeNode = draggableNodes[activeRef.current];\n\n      if (!activeNode) {\n        return;\n      }\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: event.nativeEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onStart(initialCoordinates) {\n          const id = activeRef.current;\n\n          if (!id) {\n            return;\n          }\n\n          const node = draggableNodes[id];\n\n          if (!node) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n          const event: DragStartEvent = {\n            active: {id, data: node.data, rect: activeRects},\n          };\n\n          unstable_batchedUpdates(() => {\n            dispatch({\n              type: Action.DragStart,\n              initialCoordinates,\n              active: id,\n            });\n            setMonitorState({type: Action.DragStart, event});\n          });\n\n          onDragStart?.(event);\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      unstable_batchedUpdates(() => {\n        setActiveSensor(sensorInstance);\n        setActivatorEvent(event.nativeEvent);\n      });\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return async function handler() {\n          const {active, over, scrollAdjustedTranslate} = sensorContext.current;\n          let event: DragEndEvent | null = null;\n\n          if (active && scrollAdjustedTranslate) {\n            const {cancelDrop} = latestProps.current;\n\n            event = {\n              active: active,\n              delta: scrollAdjustedTranslate,\n              over,\n            };\n\n            if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n              const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n              if (shouldCancel) {\n                type = Action.DragCancel;\n              }\n            }\n          }\n\n          activeRef.current = null;\n\n          unstable_batchedUpdates(() => {\n            dispatch({type});\n            setOver(null);\n            setIsDragging(false);\n            setActiveSensor(null);\n            setActivatorEvent(null);\n\n            if (event) {\n              setMonitorState({type, event});\n            }\n          });\n\n          if (event) {\n            const {onDragCancel, onDragEnd} = latestProps.current;\n            const handler = type === Action.DragEnd ? onDragEnd : onDragCancel;\n\n            handler?.(event);\n          }\n        };\n      }\n    },\n    [dispatch, draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorHandler,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n\n        if (\n          // No active draggable\n          activeRef.current !== null ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        if (handler(event, sensor.options) === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useSensorSetup(sensors);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      latestProps.current = props;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    Object.values(props)\n  );\n\n  useEffect(() => {\n    if (activeId != null) {\n      setIsDragging(true);\n    }\n  }, [activeId]);\n\n  useEffect(() => {\n    if (!active) {\n      initialActiveNodeRectRef.current = null;\n    }\n\n    if (active && activeNodeRect && !initialActiveNodeRectRef.current) {\n      initialActiveNodeRectRef.current = activeNodeRect;\n    }\n  }, [activeNodeRect, active]);\n\n  useEffect(() => {\n    const {onDragMove} = latestProps.current;\n    const {active, over} = sensorContext.current;\n\n    if (!active) {\n      return;\n    }\n\n    const event: DragMoveEvent = {\n      active,\n      delta: {\n        x: scrollAdjustedTranslate.x,\n        y: scrollAdjustedTranslate.y,\n      },\n      over,\n    };\n\n    setMonitorState({type: Action.DragMove, event});\n    onDragMove?.(event);\n  }, [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]);\n\n  useEffect(\n    () => {\n      const {\n        active,\n        droppableContainers,\n        scrollAdjustedTranslate,\n      } = sensorContext.current;\n\n      if (!active || !activeRef.current || !scrollAdjustedTranslate) {\n        return;\n      }\n\n      const {onDragOver} = latestProps.current;\n      const overContainer = droppableContainers.get(overId);\n      const over =\n        overContainer && overContainer.rect.current\n          ? {\n              id: overContainer.id,\n              rect: overContainer.rect.current,\n              data: overContainer.data,\n              disabled: overContainer.disabled,\n            }\n          : null;\n      const event: DragOverEvent = {\n        active,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        setOver(over);\n        setMonitorState({type: Action.DragOver, event});\n        onDragOver?.(event);\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [overId]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      active,\n      activeNode,\n      collisionRect,\n      droppableRects,\n      draggableNodes,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate: scrollAdjustedTranslate,\n      translatedRect,\n    };\n\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: translatedRect,\n    };\n  }, [\n    active,\n    activeNode,\n    collisionRect,\n    draggableNodes,\n    draggingNodeRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    scrollAdjustedTranslate,\n    translatedRect,\n  ]);\n\n  useAutoScroller({\n    ...getAutoScrollerOptions(),\n    draggingRect: translatedRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const contextValue = useMemo(() => {\n    const memoizedContext: DndContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activeNodeClientRect,\n      activatorEvent,\n      activators,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      containerNodeRect,\n      dispatch,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      recomputeLayouts,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      willRecomputeLayouts,\n      windowRect,\n    };\n\n    return memoizedContext;\n  }, [\n    active,\n    activeNode,\n    activeNodeClientRect,\n    activeNodeRect,\n    activatorEvent,\n    activators,\n    containerNodeRect,\n    dragOverlay,\n    dispatch,\n    draggableNodes,\n    draggableDescribedById,\n    droppableContainers,\n    droppableRects,\n    over,\n    recomputeLayouts,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    willRecomputeLayouts,\n    windowRect,\n  ]);\n\n  return (\n    <DndMonitorContext.Provider value={monitorState}>\n      <Context.Provider value={contextValue}>\n        <ActiveDraggableContext.Provider value={transform}>\n          {children}\n        </ActiveDraggableContext.Provider>\n      </Context.Provider>\n      <Accessibility\n        announcements={announcements}\n        hiddenTextDescribedById={draggableDescribedById}\n        screenReaderInstructions={screenReaderInstructions}\n      />\n    </DndMonitorContext.Provider>\n  );\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll =\n      activeSensor?.autoScrollEnabled === false;\n    const autoScrollGloballyDisabled =\n      typeof autoScroll === 'object'\n        ? autoScroll.enabled === false\n        : autoScroll === false;\n    const enabled =\n      !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return {\n        ...autoScroll,\n        enabled,\n      };\n    }\n\n    return {enabled};\n  }\n});\n","import {createContext, useContext, useEffect, useMemo} from 'react';\nimport {Transform, useNodeRef, useUniqueId} from '@dnd-kit/utilities';\n\nimport {Context, Data} from '../store';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {\n  useData,\n  useSyntheticListeners,\n  SyntheticListenerMap,\n} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: string;\n  data?: Data;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nconst ID_PREFIX = 'Droppable';\n\nexport function useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    active,\n    activeNodeRect,\n    activatorEvent,\n    ariaDescribedById,\n    draggableNodes,\n    droppableRects,\n    activators,\n    over,\n  } = useContext(Context);\n  const {role = defaultRole, roleDescription = 'draggable', tabIndex = 0} =\n    attributes ?? {};\n  const isDragging = active?.id === id;\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useData(data);\n\n  useEffect(\n    () => {\n      draggableNodes[id] = {id, key, node, data: dataRef};\n\n      return () => {\n        const node = draggableNodes[id];\n\n        if (node && node.key === key) {\n          delete draggableNodes[id];\n        }\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  const memoizedAttributes = useMemo(\n    () => ({\n      role,\n      tabIndex,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    }),\n    [role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]\n  );\n\n  return {\n    active,\n    activeNodeRect,\n    activatorEvent,\n    attributes: memoizedAttributes,\n    droppableRects,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    transform,\n  };\n}\n","import {ContextType, useContext} from 'react';\nimport {Context} from '../store';\n\nexport function useDndContext() {\n  return useContext(Context);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof Context>;\n","import {useContext, useEffect, useRef} from 'react';\nimport {\n  useIsomorphicLayoutEffect,\n  useNodeRef,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {Context, Action, Data} from '../store';\nimport type {LayoutRect} from '../types';\nimport {useData} from './utilities';\n\nexport interface UseDroppableArguments {\n  id: string;\n  disabled?: boolean;\n  data?: Data;\n}\n\nconst ID_PREFIX = 'Droppable';\n\nexport function useDroppable({\n  data,\n  disabled = false,\n  id,\n}: UseDroppableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {active, dispatch, over} = useContext(Context);\n  const rect = useRef<LayoutRect | null>(null);\n  const [nodeRef, setNodeRef] = useNodeRef();\n  const dataRef = useData(data);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          key,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          key,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(\n    () => {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        key,\n        disabled,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  return {\n    active,\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n","import {useEffect, useState} from 'react';\nimport {CSS, Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {UniqueIdentifier} from '../../../types';\nimport type {DraggableNodes} from '../../../store';\nimport {getViewRect} from '../../../utilities';\nimport {getMeasurableNode} from '../../../utilities/nodes';\n\nexport interface DropAnimation {\n  duration: number;\n  easing: string;\n  dragSourceOpacity?: number;\n}\n\ninterface Arguments {\n  activeId: UniqueIdentifier | null;\n  animate: boolean;\n  adjustScale: boolean;\n  draggableNodes: DraggableNodes;\n  duration: DropAnimation['duration'] | undefined;\n  easing: DropAnimation['easing'] | undefined;\n  dragSourceOpacity: DropAnimation['dragSourceOpacity'] | undefined;\n  node: HTMLElement | null;\n  transform: Transform | undefined;\n}\n\nexport function useDropAnimation({\n  animate,\n  adjustScale,\n  activeId,\n  draggableNodes,\n  duration,\n  easing,\n  dragSourceOpacity,\n  node,\n  transform,\n}: Arguments) {\n  const [dropAnimationComplete, setDropAnimationComplete] = useState(false);\n\n  useEffect(() => {\n    if (!animate || !activeId || !easing || !duration) {\n      if (animate) {\n        setDropAnimationComplete(true);\n      }\n\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      const finalNode = draggableNodes[activeId]?.node.current;\n\n      if (transform && node && finalNode && finalNode.parentNode !== null) {\n        const fromNode = getMeasurableNode(node);\n\n        if (fromNode) {\n          const from = fromNode.getBoundingClientRect();\n          const to = getViewRect(finalNode);\n          const delta = {\n            x: from.left - to.left,\n            y: from.top - to.top,\n          };\n\n          if (Math.abs(delta.x) || Math.abs(delta.y)) {\n            const scaleDelta = {\n              scaleX: adjustScale\n                ? (to.width * transform.scaleX) / from.width\n                : 1,\n              scaleY: adjustScale\n                ? (to.height * transform.scaleY) / from.height\n                : 1,\n            };\n            const finalTransform = CSS.Transform.toString({\n              x: transform.x - delta.x,\n              y: transform.y - delta.y,\n              ...scaleDelta,\n            });\n            const originalOpacity = finalNode.style.opacity;\n\n            if (dragSourceOpacity != null) {\n              finalNode.style.opacity = `${dragSourceOpacity}`;\n            }\n\n            const nodeAnimation = node.animate(\n              [\n                {\n                  transform: CSS.Transform.toString(transform),\n                },\n                {\n                  transform: finalTransform,\n                },\n              ],\n              {\n                easing,\n                duration,\n              }\n            );\n\n            nodeAnimation.onfinish = () => {\n              node.style.display = 'none';\n\n              setDropAnimationComplete(true);\n\n              if (finalNode && dragSourceOpacity != null) {\n                finalNode.style.opacity = originalOpacity;\n              }\n            };\n            return;\n          }\n        }\n      }\n\n      setDropAnimationComplete(true);\n    });\n  }, [\n    animate,\n    activeId,\n    adjustScale,\n    draggableNodes,\n    duration,\n    easing,\n    dragSourceOpacity,\n    node,\n    transform,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dropAnimationComplete) {\n      setDropAnimationComplete(false);\n    }\n  }, [dropAnimationComplete]);\n\n  return dropAnimationComplete;\n}\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {CSS, isKeyboardEvent, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getRelativeTransformOrigin} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport {ActiveDraggableContext} from '../DndContext';\nimport {useDndContext} from '../../hooks';\nimport type {ViewRect} from '../../types';\nimport {useDropAnimation, DropAnimation} from './hooks';\n\ntype TransitionGetter = (\n  activatorEvent: Event | null\n) => React.CSSProperties['transition'] | undefined;\n\nexport interface Props {\n  adjustScale?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  dropAnimation?: DropAnimation | null | undefined;\n  style?: React.CSSProperties;\n  transition?: string | TransitionGetter;\n  modifiers?: Modifiers;\n  wrapperElement?: keyof JSX.IntrinsicElements;\n  zIndex?: number;\n}\n\nconst defaultTransition: TransitionGetter = (activatorEvent) => {\n  const isKeyboardActivator = isKeyboardEvent(activatorEvent);\n\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nexport const defaultDropAnimation: DropAnimation = {\n  duration: 250,\n  easing: 'ease',\n  dragSourceOpacity: 0,\n};\n\nexport const DragOverlay = React.memo(\n  ({\n    adjustScale = false,\n    children,\n    dropAnimation = defaultDropAnimation,\n    style: styleProp,\n    transition = defaultTransition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999,\n  }: Props) => {\n    const {\n      active,\n      activeNodeRect,\n      activeNodeClientRect,\n      containerNodeRect,\n      draggableNodes,\n      activatorEvent,\n      over,\n      dragOverlay,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    } = useDndContext();\n    const transform = useContext(ActiveDraggableContext);\n    const modifiedTransform = applyModifiers(modifiers, {\n      activatorEvent,\n      active,\n      activeNodeRect: activeNodeClientRect,\n      containerNodeRect,\n      draggingNodeRect: dragOverlay.rect,\n      over,\n      overlayNodeRect: dragOverlay.rect,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      transform,\n      windowRect,\n    });\n    const isDragging = active !== null;\n    const finalTransform = adjustScale\n      ? modifiedTransform\n      : {\n          ...modifiedTransform,\n          scaleX: 1,\n          scaleY: 1,\n        };\n\n    const initialNodeRect = useLazyMemo<ViewRect | null>(\n      (previousValue) => {\n        if (isDragging) {\n          return previousValue ?? activeNodeRect;\n        }\n\n        return null;\n      },\n      [isDragging, activeNodeRect]\n    );\n    const style: React.CSSProperties | undefined = initialNodeRect\n      ? {\n          position: 'fixed',\n          width: initialNodeRect.width,\n          height: initialNodeRect.height,\n          top: initialNodeRect.top,\n          left: initialNodeRect.left,\n          zIndex,\n          transform: CSS.Transform.toString(finalTransform),\n          touchAction: 'none',\n          transformOrigin:\n            adjustScale && activatorEvent\n              ? getRelativeTransformOrigin(\n                  activatorEvent as MouseEvent | KeyboardEvent | TouchEvent,\n                  initialNodeRect as any\n                )\n              : undefined,\n          transition:\n            typeof transition === 'function'\n              ? transition(activatorEvent)\n              : transition,\n          ...styleProp,\n        }\n      : undefined;\n    const attributes = isDragging\n      ? {\n          style,\n          children,\n          className,\n          transform: finalTransform,\n        }\n      : undefined;\n    const attributesSnapshot = useRef(attributes);\n    const derivedAttributes = attributes ?? attributesSnapshot.current;\n    const {children: finalChildren, transform: _, ...otherAttributes} =\n      derivedAttributes ?? {};\n    const prevActiveId = useRef(active?.id ?? null);\n    const dropAnimationComplete = useDropAnimation({\n      animate: Boolean(dropAnimation && prevActiveId.current && !active),\n      adjustScale,\n      activeId: prevActiveId.current,\n      draggableNodes,\n      duration: dropAnimation?.duration,\n      easing: dropAnimation?.easing,\n      dragSourceOpacity: dropAnimation?.dragSourceOpacity,\n      node: dragOverlay.nodeRef.current,\n      transform: attributesSnapshot.current?.transform,\n    });\n    const shouldRender = Boolean(\n      finalChildren && (children || (dropAnimation && !dropAnimationComplete))\n    );\n\n    useEffect(() => {\n      if (active?.id !== prevActiveId.current) {\n        prevActiveId.current = active?.id ?? null;\n      }\n\n      if (active && attributesSnapshot.current !== attributes) {\n        attributesSnapshot.current = attributes;\n      }\n    }, [active, attributes]);\n\n    useEffect(() => {\n      if (dropAnimationComplete) {\n        attributesSnapshot.current = undefined;\n      }\n    }, [dropAnimationComplete]);\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    return React.createElement(\n      wrapperElement,\n      {\n        ...otherAttributes,\n        ref: dragOverlay.setRef,\n      },\n      finalChildren\n    );\n  }\n);\n"],"names":["screenReaderInstructions","draggable","defaultAnnouncements","onDragStart","id","onDragOver","overId","onDragEnd","onDragCancel","Action","noop","_args","DroppableContainersMap","Map","get","undefined","toArray","Array","from","values","getEnabled","filter","disabled","getNodeFor","node","current","Context","createContext","activatorEvent","active","activeNode","activeNodeRect","activeNodeClientRect","activators","ariaDescribedById","containerNodeRect","dispatch","draggableNodes","droppableRects","droppableContainers","over","dragOverlay","nodeRef","rect","setRef","scrollableAncestors","scrollableAncestorRects","recomputeLayouts","windowRect","willRecomputeLayouts","getInitialState","initialCoordinates","x","y","nodes","translate","droppable","containers","reducer","state","action","type","DragStart","DragMove","coordinates","DragEnd","DragCancel","RegisterDroppable","element","set","SetDroppableDisabled","key","UnregisterDroppable","delete","DndMonitorContext","event","useDndMonitor","onDragMove","monitorState","useContext","previousMonitorState","useRef","useEffect","DragOver","Accessibility","announcements","hiddenTextDescribedById","announce","announcement","useAnnouncement","liveRegionId","useUniqueId","mounted","setMounted","useState","useMemo","createPortal","React","HiddenText","value","LiveRegion","document","body","defaultCoordinates","Object","freeze","distanceBetween","p1","p2","Math","sqrt","pow","getRelativeTransformOrigin","isKeyboardEvent","eventCoordinates","getEventCoordinates","transformOrigin","left","width","top","height","centerOfRectangle","offsetLeft","offsetTop","closestCenter","collisionRect","centerRect","minDistanceToCenter","Infinity","minDroppableContainer","droppableContainer","distBetween","adjustScale","transform","rect1","rect2","scaleX","scaleY","getRectDelta","createRectAdjustmentFn","modifier","adjustViewRect","viewRect","adjustments","reduce","acc","adjustment","bottom","right","getAdjustedRect","isFixed","computedStyle","window","getComputedStyle","position","isScrollable","overflowRegex","properties","find","property","test","getScrollableAncestors","scrollParents","findScrollableAncestors","isDocument","scrollingElement","includes","push","isHTMLElement","isSVGElement","parentNode","getScrollableElement","canUseDOM","isWindow","isNode","getOwnerDocument","getScrollCoordinates","scrollX","scrollY","scrollLeft","scrollTop","Direction","getScrollPosition","scrollingContainer","minScroll","maxScroll","scrollWidth","clientWidth","scrollHeight","clientHeight","isTop","isLeft","isBottom","isRight","isDocumentScrollingElement","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","finalScrollContainerRect","direction","speed","threshold","Backward","abs","Forward","getScrollElementRect","innerWidth","innerHeight","getBoundingClientRect","getScrollOffsets","add","getEdgeOffset","parent","offset","nodeOffset","offsetParent","getLayoutRect","offsetWidth","offsetHeight","getViewportLayoutRect","scrollOffsets","getViewRect","isViewRect","entry","cornersOfRectangle","closestCorners","minDistanceToCorners","minDistanceContainer","corners","rectCorners","distances","accumulator","corner","index","effectiveDistance","Number","toFixed","getIntersectionRatio","target","max","min","targetArea","entryArea","intersectionArea","intersectionRatio","rectIntersection","maxIntersectionRatio","maxIntersectingDroppableContainer","AutoScrollActivator","TraversalOrder","useAutoScroller","activator","Pointer","canScroll","draggingRect","enabled","interval","order","TreeOrder","pointerCoordinates","setAutoScrollInterval","clearAutoScrollInterval","useInterval","scrollSpeed","DraggableRect","scrollDirection","scrollContainerRef","autoScroll","useCallback","scrollBy","sortedScrollableAncestors","reverse","length","indexOf","scrolllContainerRect","JSON","stringify","useCachedNode","draggableNode","useLazyMemo","cachedNode","useCombineActivators","sensors","getSyntheticHandler","sensor","Sensor","sensorActivators","map","eventName","handler","useData","data","dataRef","useIsomorphicLayoutEffect","MeasuringStrategy","MeasuringFrequency","defaultValue","defaultConfig","measure","strategy","WhileDragging","frequency","Optimized","useDroppableMeasuring","dragging","dependencies","config","setWillRecomputeLayouts","containersRef","recomputeLayoutsTimeoutId","isDisabled","layoutRectMap","previousValue","container","createLayoutRectMap","recompute","requestAnimationFrame","forceRecomputeLayouts","setTimeout","Always","BeforeDragging","useScrollOffsets","elements","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","previousElements","cleanup","entries","scrollableElement","addEventListener","passive","forEach","removeEventListener","useScrollableAncestors","previousNode","ancestors","useSensorSetup","teardownFns","setup","teardown","useSyntheticListeners","listeners","useClientRect","createUseRectFn","useClientRects","createUseRectsFn","useRect","getRect","forceRecompute","previousElement","useRects","getMeasurableNode","children","firstChild","getDragOverlayRect","useDragOverlayRect","useDragOverlayMeasuring","useNodeRef","useSensor","options","useSensors","Listeners","constructor","removeAll","listener","getEventListenerTarget","EventTarget","getWindow","hasExceededDistance","delta","measurement","dx","dy","EventName","preventDefault","stopPropagation","KeyboardCode","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","props","autoScrollEnabled","windowListeners","handleKeyDown","bind","handleCancel","attach","handleStart","Resize","VisibilityChange","Keydown","onStart","Error","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","newCoordinates","scrollDelta","coordinatesDelta","getCoordinatesDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","canFullyScrollToNewCoordinates","behavior","handleMove","getAdjustedCoordinates","onMove","onEnd","detach","onCancel","onActivation","nativeEvent","isDistanceConstraint","constraint","Boolean","isDelayConstraint","AbstractPointerSensor","events","listenerTarget","activated","timeoutId","documentListeners","handleKeydown","removeTextSelection","activationConstraint","move","name","ContextMenu","delay","clearTimeout","Click","capture","SelectionChange","tolerance","distance","cancelable","getSelection","removeAllRanges","PointerSensor","isPrimary","button","MouseButton","MouseSensor","RightClick","TouchSensor","touches","applyModifiers","modifiers","args","defaultSensors","defaultData","ActiveDraggableContext","DndContext","memo","collisionDetection","measuring","defaultScreenReaderInstructions","store","useReducer","setMonitorState","isDragging","setIsDragging","activeId","activeRects","initial","translated","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","draggableDescribedById","enabledDroppableContainers","activationCoordinates","initialActiveNodeRectRef","initialActiveNodeRect","sensorContext","draggingNodeRect","scrollAdjustedTranslate","translatedRect","overNode","ownerDocument","defaultView","parentElement","nodeRectDelta","modifiedTranslate","overlayNodeRect","scrollAdjustment","setOver","instantiateSensor","sensorInstance","unstable_batchedUpdates","createHandler","cancelDrop","shouldCancel","Promise","resolve","bindActivatorToSensorInstantiator","dndKit","defaultPrevented","capturedBy","overContainer","getAutoScrollerOptions","contextValue","memoizedContext","Provider","activeSensorDisablesAutoscroll","autoScrollGloballyDisabled","NullContext","defaultRole","ID_PREFIX","useDraggable","attributes","role","roleDescription","tabIndex","setNodeRef","memoizedAttributes","useDndContext","useDroppable","isOver","useDropAnimation","animate","duration","easing","dragSourceOpacity","dropAnimationComplete","setDropAnimationComplete","finalNode","fromNode","to","scaleDelta","finalTransform","CSS","Transform","toString","originalOpacity","style","opacity","nodeAnimation","onfinish","display","defaultTransition","isKeyboardActivator","defaultDropAnimation","DragOverlay","dropAnimation","styleProp","transition","wrapperElement","className","zIndex","modifiedTransform","initialNodeRect","touchAction","attributesSnapshot","derivedAttributes","finalChildren","_","otherAttributes","prevActiveId","shouldRender","createElement","ref"],"mappings":"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"}